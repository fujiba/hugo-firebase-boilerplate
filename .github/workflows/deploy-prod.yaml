name: Deploy to prod environment.

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'website/**'

jobs:
  confirm_pre_conditions:
    name: Confirm pre-conditons for continue build&deploy job.
    runs-on: ubuntu-latest
    env:
      GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY }}
    outputs:
      skip_ci: ${{ steps.confirmEnvValues.outputs.value }}
    steps:
      - name: Confirm environment values
        id: confirmEnvValues
        run: |
          if [ -z $GCLOUD_SERVICE_KEY ]; then
            echo "GCLOUD_SERVICE_KEY is not set"
            echo "value=true" >> $GITHUB_OUTPUT
          else
            echo "value=false" >> $GITHUB_OUTPUT
          fi
  build_and_deploy:
    name: Call hugo and deploy to firebase.
    runs-on: ubuntu-latest
    needs: confirm_pre_conditions
    if: ${{ needs.confirm_pre_conditions.outputs.skip_ci != 'true' }}
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          submodules: true # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod
      - name: Get Hugo Version from config
        id: lookupHugoVersion
        uses: mikefarah/yq@v4
        with:
          cmd: yq '.setup.hugoVersion' 'config.yaml'
      - name: Get firebase project id from config
        id: lookupFirebaseProjectId
        uses: mikefarah/yq@v4
        with:
          cmd: yq '.firebase.generatedProjectId' 'config.yaml'
      - name: Get Node Version from config
        id: lookupNodeVersion
        uses: mikefarah/yq@v4
        with:
          cmd: yq '.setup.nodeVersion' 'config.yaml'
      - name: setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.lookupNodeVersion.outputs.result }}
          cache: npm
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: ${{ steps.lookupHugoVersion.outputs.result }}
      - name: make GOOGLE_APPLICATION_CREDENTIALS
        run: echo $GCLOUD_SERVICE_KEY | base64 -d > $GOOGLE_APPLICATION_CREDENTIALS
      - name: Install Dependencies
        run: |
          npm install -g firebase-tools
          npm ci
      - name: Build and deploy
        run: |
          # Only run deployment steps if on the main branch
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            firebase use ${{ steps.lookupFirebaseProjectId.outputs.result }}
            firebase target:apply hosting prod ${{ steps.lookupFirebaseProjectId.outputs.result }}
            npm run deploy:prod
          else
            echo "Skipping deployment steps on non-main branch (${{ github.ref_name }})."
            # Optionally run build steps without deploy for testing
            (cd website && hugo --minify)
          fi
